ex=~/prog3

cd $LIB/public/p3

[ ! -e $ex ] && echo Cannot find the program, please build it! && exit 1

ofile=`mktemp`

errorcase=0

case "$1" in
	badfile)
		args="nosuchfile"
		;;

	toomanyfile)
		args="emptyfile nosuchfile"
		;;

	emptyfile)
        errorcase=1
		args="emptyfile" 
		;;

	good[1-2])
		args="$1" 
		;;

	good[3-4])
		args="< $1" 
		;;

	bad[1-3])
        errorcase=1
		args="$1" 
		;;

	bad[4-5])
        errorcase=1
		args="< $1" 
		;;

	harder[1-7])
		args="$1" 
		;;

	badder[1-8])
        errorcase=1
		args="$1" 
		;;

	*)
		echo "cases are badfile, toomanyfile, emptyfile"
        for i in 1 2 3 4 ; do echo -n "good$i, "; done
        for i in 1 2 3 4 5; do echo -n "bad$i, "; done
        echo
        for i in 1 2 3 4 5 6 7; do echo -n "harder$i, "; done
        for i in 1 2 3 4 5 6 7 8 ; do echo -n "badder$i, "; done
        echo
		exit 1
		;;
esac

echo RUNNING prog3 $args

score=0

if [ "$GRADING" = 1 ] ;
then
    eval ./wrapcase.pl "$ex $args 2>&1" | tee $ofile
else
    eval $ex $args 2>&1 | tee $ofile
fi

rc=0
if [ $errorcase -eq 0 ] ;
then
    diff $ofile ${1}.correct
    rc=$?
else
    idents=$(egrep "IDENT COUNT|LEAF COUNT|STRING COUNT" $ofile | wc -l)
    errs=$(grep ":" $ofile | egrep '[0-9]+: .*' | wc -l)
    olines=$(cat $ofile | wc -l)
    if [ $idents -ne 0 -o $errs -eq 0 -o $errs -ne $olines ]; then rc=1; fi
fi


[ $rc -eq 0 ] && score=1

echo RESULT: $1 "[ " $score " / 1 ]"

rm $ofile

exit $rc



